#!/usr/bin/env python3

from math import ceil
import sys

class Reedpipes:
    def __init__(self, args):
        self.vector = [0.0] * 5
        self.abscissa = []
        for x in range(1, len(args[:-1])):
            self.abscissa.append(float(args[x]))
        self.n = int(args[-1])
        self.radius = [0.0] * self.n

    def calculVector(self):
        for x in range(1, len(self.vector[:-1])):
            self.vector[x] = (6.0 * (self.abscissa[x+1] - 2 * self.abscissa[x] + self.abscissa[x-1])) / 50.0
        self.vector[2] = ((self.vector[2] - (self.vector[1] + self.vector[3]) / 4.0) * 4.0) / 7.0
        self.vector[1] = self.vector[1] / 2 - 0.25 * self.vector[2]
        self.vector[3] = self.vector[3] / 2 - 0.25 * self.vector[2]

    def calculRadius(self):
        abs = [0, 5, 10, 15, 20]
        for x in range(self.n):
            abscissa = 20.0 / (self.n - 1) * x
            index = ceil(abscissa / 5) if ceil(abscissa / 5) != 0 else 1
            self.radius[x] = - self.vector[index-1] / 30 * ((abscissa - abs[index]) ** 3) + self.vector[index] / 30 * ((abscissa - abs[index-1]) ** 3)\
            - (self.abscissa[index-1] / 5 - 5 / 6 * self.vector[index-1]) * (abscissa - abs[index])\
            + (self.abscissa[index] / 5 - 5 / 6 * self.vector[index]) * (abscissa - abs[index-1])

    def printReedpipes(self):
        print('vector result: [', end='')
        for x in self.vector[:-1]:
            print('%.1f, ' % (round(x, 1) if round(x, 1) != 0 else 0), end='')
        print('%.1f]' % (round(self.vector[-1], 1) if round(self.vector[-1], 1) != 0 else 0))
        for x in range(self.n):
            print('abscissa: %.1f cm\tradius: %.1f cm' % (round((20.0 / (self.n - 1)) * x, 1), round(self.radius[x], 1) if round(self.radius[x], 1) != 0 else 0))

def printUsage():
    print('USAGE')
    print('\t308reedpipes r0 r5 r10 r15 r20 n\n')
    print('DESCRIPTION')
    print('\tr0\tradius (in cm) of pipe at the 0cm abscissa')
    print('\tr5\tradius (in cm) of pipe at the 5cm abscissa')
    print('\tr10\tradius (in cm) of pipe at the 10cm abscissa')
    print('\tr15\tradius (in cm) of pipe at the 15cm abscissa')
    print('\tr20\tradius (in cm) of pipe at the 20cm abscissa')
    print('\tn\tnumber of points needed to display the radius')
    exit(0)

def checkArgs(args):
    if len(args) == 2 and (args[1] == '-h' or args[1] == '--help'):
        printUsage()
    if len(args) != 7:
        raise Exception('Bad number of arguments')
    for x in args[1:-1]:
        if float(x) <= 0:
            raise Exception('Arguments should be positive')
    if int(args[-1]) <= 0:
        raise Exception('Arguments should be positive')

def main(args):
    checkArgs(args)
    obj = Reedpipes(args)
    obj.calculVector()
    obj.calculRadius()
    obj.printReedpipes()

if __name__ == '__main__':
    try:
        main(sys.argv)
    except Exception as e:
        print(e)
        exit(84)